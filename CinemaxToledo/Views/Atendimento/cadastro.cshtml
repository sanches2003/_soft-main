@model IEnumerable<AtendimentoModel>

@{
    ViewData["Title"] = "Index";
    var id = @Context.Session.GetInt32("idLogin");
    var adm = @Context.Session.GetInt32("ativoTrue");
}
<style>
    .align-left {
        text-align: left;
    }

    .bold-almost {
        font-weight: 600; /* Valor quase negrito */
    }

    .font-weight-bold {
        font-size: 16px; /* Tamanho da fonte para o texto abaixo da linha */
        font-weight: bold; /* Negrito para destacar o texto */
        color: #333; /* Cor do texto (opcional) */
    }

    .timer-label {
        font-weight: bold;
        font-size: 14px;
        color: #333;
        position: relative;
        margin-bottom: 5px; /* Espaço entre o timer e os botões */
    }

    .timer-controls {
        display: flex;
        justify-content: flex-end; /* Alinha os botões à direita */
    }

        .timer-controls button {
            margin-left: 5px; /* Espaço entre os botões */
        }

    .custom-button {
        display: inline-block; /* Para que o botão não ocupe toda a largura */
        padding: 10px 20px; /* Tamanho do botão */
        font-size: 16px; /* Tamanho da fonte */
        font-weight: 600; /* Font-weight igual ao título */
        color: white; /* Cor do texto branca */
        background-color: green; /* Cor de fundo verde */
        border: 2px solid green; /* Borda verde */
        border-radius: 5px; /* Bordas arredondadas */
        text-decoration: none; /* Remove o sublinhado padrão */
        text-align: center; /* Alinha o texto no centro do botão */
        cursor: pointer; /* Muda o cursor para indicar um link clicável */
    }

        .custom-button:hover {
            text-decoration: underline; /* Sublinha o texto ao passar o mouse */
        }

    .tab-container {
        margin-top: 20px;
    }

    .tab {
        display: inline-flex; /* Flexível para incluir o botão de exclusão */
        align-items: center; /* Centraliza o conteúdo verticalmente */
        margin-right: 10px;
        padding: 10px 40px; /* Diminui a largura das abas mais um pouco */
        background-color: white; /* Cor de fundo branca */
        color: black; /* Cor do texto preta */
        border: 2px solid grey; /* Borda cinza */
        border-radius: 5px; /* Bordas arredondadas */
        cursor: pointer; /* Muda o cursor para indicar um link clicável */
        font-size: 16px; /* Tamanho da fonte */
        text-align: center; /* Alinha o texto no centro da aba */
        position: relative; /* Para posicionar o botão de exclusão */
        min-height: 30px; /* Define a altura mínima das abas */
        line-height: 1.2; /* Ajusta a altura da linha para controlar a altura das abas */
    }

        .tab.active {
            background-color: green; /* Fundo verde para a aba ativa */
            color: white; /* Texto branco para a aba ativa */
            border: 2px solid green; /* Borda verde para a aba ativa */
        }

        .tab .close-btn {
            position: absolute; /* Posiciona o botão de exclusão */
            top: 50%; /* Centraliza verticalmente */
            right: 10px; /* Espaço da borda direita */
            transform: translateY(-50%); /* Ajusta o alinhamento vertical */
            background: none; /* Sem fundo */
            color: black; /* Cor do texto preta */
            border: none; /* Remove a borda padrão */
            font-size: 14px; /* Tamanho da fonte do botão */
            cursor: pointer; /* Muda o cursor para indicar um botão clicável */
        }

            .tab .close-btn:hover {
                color: darkgray; /* Cor do texto ao passar o mouse */
            }

    .content-container {
        margin-top: 20px;
        padding: 20px;
        border: 1px solid grey; /* Borda cinza ao redor do container */
        border-radius: 5px; /* Bordas arredondadas */
        background-color: #f9f9f9; /* Cor de fundo do container */
    }

    .radio-group {
        margin-top: 10px; /* Espaçamento superior para o grupo de rádio */
        display: flex; /* Exibe os itens em linha */
        flex-wrap: wrap; /* Permite a quebra de linha se necessário */
        gap: 15px; /* Espaçamento entre as opções */
        border-bottom: 1px solid lightgray; /* Linha cinza clara abaixo do grupo */
    }

        .radio-group label {
            display: block;
            margin-left: 150px; /* Espaçamento entre os botões de rádio */
        }

        .radio-group label {
            display: flex; /* Alinha o rótulo e o botão de rádio em linha */
            align-items: center; /* Alinha o botão de rádio verticalmente com o texto */
            cursor: pointer; /* Indica que o rótulo é clicável */
        }

    .tab {
        border: 1px solid #ccc;
        border-radius: 10px;
        margin-bottom: 10px;
        padding: 10px;
        position: relative;
        background-color: #f9f9f9;
        overflow: hidden;
    }

        .tab.active {
            border-color: #007bff;
        }

    .timer-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 10px;
    }

    .play-btn, .pause-btn, .close-btn {
        border: none;
        background: none;
        cursor: pointer;
        font-size: 18px;
        border-radius: 50%;
        padding: 5px;
        transition: background-color 0.3s ease;
    }

        .play-btn:hover, .pause-btn:hover, .close-btn:hover {
            background-color: #e0e0e0;
        }

        .play-btn i, .pause-btn i {
            font-size: 18px;
        }

    .timer {
        display: flex;
        align-items: center;
        font-size: 18px;
    }

    .timer-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
        padding-right: 30px; /* Ajusta o padding para garantir espaço para o botão de fechar */
    }

    .timer-label {
        display: flex;
        align-items: center;
    }

    .number {
        font-weight: bold;
        margin-right: 10px;
        font-size: 18px;
    }

    .timer-display {
        font-size: 18px;
    }

    .close-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: #ff5c5c;
        color: white;
        border-radius: 50%;
        padding: 5px;
        font-size: 16px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
        z-index: 1; /* Garante que o botão de fechar fique acima dos outros elementos */
    }

        .close-btn:hover {
            background-color: #ff3b3b;
        }

    .line-divider {
        border-top: 1px solid lightgray; /* Linha divisória cinza clara */
        margin: 20px 0; /* Espaçamento acima e abaixo da linha */
    }

    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px; /* Espaçamento entre os cartões */
        justify-content: flex-start; /* Alinha os cartões à esquerda */
    }

    .card-link {
        text-decoration: none; /* Remove a decoração de link */
        color: inherit; /* Garante que a cor do texto não seja alterada */
        width: auto; /* O link ajusta-se ao tamanho do cartão */
    }

    .card {
        position: relative;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 5px; /* Reduzindo o espaçamento interno */
        width: 120px; /* Definindo uma largura menor para os cartões */
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); /* Efeito de hover no cartão */
        }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .card-header h5 {
            margin: 0;
            font-size: 12px; /* Diminuindo o tamanho da fonte */
            font-weight: bold;
        }

    .close-button {
        font-size: 12px; /* Diminuindo o tamanho do "X" */
        color: #ff0000; /* Cor do "X" */
        text-decoration: none;
        cursor: pointer;
    }

        .close-button:hover {
            color: #cc0000; /* Cor ao passar o mouse */
        }

</style>

<span class="alert @ViewBag.classe">@ViewBag.mensagem</span>
<script>
    function confirmExclusao(id) {
        if (confirm("Tem certeza que deseja excluir este de chamado?")) {
            location.href = "/Atendimento/excluir/" + id;
        }
    }
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<div class="align-left">
    <h1>Atendimento</h1>
    <a asp-action="cadastro" asp-controller="atendimento" class="custom-button">Novo Atendimento</a>
    <div class="card-container">
        @foreach (var item in Model)
        {
            if (item.Status != StatusModel.Concluido) // Comparando o enum StatusModel
            {
                if (adm == 1)  // Se admin, mostra todos os atendimentos que não estão concluídos
                {
                    <a href="~/Atendimento/prealterar/@item.id" class="card-link">
                        <div class="card mt-3">
                            <div class="card-header">
                                <h5>ID: @item.id</h5>  <!-- Exibindo o ID do atendimento -->
                                <a href="#" class="close-button" onclick="confirmExclusao(@item.id)">&times;</a>  <!-- ID no evento de exclusão -->
                            </div>
                        </div>
                    </a>
                }
                else if (adm == 0) // Se não for admin, mostra só os atendimentos do próprio usuário
                {
                    if (id == item.idUsuario)
                    {
                        <a href="~/Atendimento/prealterar/@item.id" class="card-link">
                            <div class="card mt-3">
                                <div class="card-header">
                                    <h5>ID: @item.id</h5>  <!-- Exibindo o ID do atendimento -->
                                    <a href="#" class="close-button" onclick="confirmExclusao(@item.id)">&times;</a>  <!-- ID no evento de exclusão -->
                                </div>
                            </div>
                        </a>
                    }
                }
            }
        }
    </div>

</div>

@Html.Partial("cadastroparcial", (AtendimentoModel)ViewBag.cadastro)